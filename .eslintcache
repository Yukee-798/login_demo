[{"/Users/apple/daliy/React_Project/login_demo/src/index.js":"1","/Users/apple/daliy/React_Project/login_demo/src/App.jsx":"2","/Users/apple/daliy/React_Project/login_demo/src/pages/login/Login.js":"3","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/index.js":"4","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/saga/rootSaga.js":"5","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginWindow/index.jsx":"6","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/index.js":"7","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/captchaInput.js":"8","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/pwdLoginForm.js":"9","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/phoneInput.js":"10","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/constant.js":"11","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/index.jsx":"12","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginFooter/index.jsx":"13","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PhoneLoginForm/index.jsx":"14","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PwdLoginForm/index.jsx":"15","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/actions/pwdLoginForm.js":"16","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/actions/phoneInput.js":"17","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/actions/captchaInput.js":"18","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/ErrorInfo/index.jsx":"19","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PhoneLoginForm/PhoneInput/index.jsx":"20","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PhoneLoginForm/CaptchaInput/index.jsx":"21","/Users/apple/daliy/React_Project/login_demo/src/pages/resetpassword/components/ResetPwdWindow/index.jsx":"22","/Users/apple/daliy/React_Project/login_demo/src/pages/resetpassword/components/ResetPwdMain/index.jsx":"23","/Users/apple/daliy/React_Project/login_demo/src/pages/resetpassword/components/ResetPwdMain/PhoneResetForm/index.jsx":"24"},{"size":114,"mtime":1611938480494,"results":"25","hashOfConfig":"26"},{"size":2903,"mtime":1614169970633,"results":"27","hashOfConfig":"26"},{"size":275,"mtime":1612341456581,"results":"28","hashOfConfig":"26"},{"size":355,"mtime":1612341456595,"results":"29","hashOfConfig":"26"},{"size":116,"mtime":1612341456601,"results":"30","hashOfConfig":"26"},{"size":571,"mtime":1612948816213,"results":"31","hashOfConfig":"26"},{"size":291,"mtime":1612873499182,"results":"32","hashOfConfig":"26"},{"size":1242,"mtime":1612864775822,"results":"33","hashOfConfig":"26"},{"size":1667,"mtime":1612870509301,"results":"34","hashOfConfig":"26"},{"size":1381,"mtime":1612864091639,"results":"35","hashOfConfig":"26"},{"size":1724,"mtime":1612871014177,"results":"36","hashOfConfig":"26"},{"size":1532,"mtime":1613911842387,"results":"37","hashOfConfig":"26"},{"size":1980,"mtime":1612341456586,"results":"38","hashOfConfig":"26"},{"size":4689,"mtime":1613911132761,"results":"39","hashOfConfig":"26"},{"size":4638,"mtime":1614169347340,"results":"40","hashOfConfig":"26"},{"size":1169,"mtime":1612870939738,"results":"41","hashOfConfig":"26"},{"size":979,"mtime":1612864353511,"results":"42","hashOfConfig":"26"},{"size":864,"mtime":1612864294709,"results":"43","hashOfConfig":"26"},{"size":618,"mtime":1612871617327,"results":"44","hashOfConfig":"26"},{"size":5488,"mtime":1613908756277,"results":"45","hashOfConfig":"26"},{"size":2879,"mtime":1613116141788,"results":"46","hashOfConfig":"26"},{"size":426,"mtime":1613658654062,"results":"47","hashOfConfig":"26"},{"size":1236,"mtime":1613658654059,"results":"48","hashOfConfig":"26"},{"size":3184,"mtime":1614169735281,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1v5knpx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/daliy/React_Project/login_demo/src/index.js",[],["105","106"],"/Users/apple/daliy/React_Project/login_demo/src/App.jsx",["107","108"],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/Login.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/index.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/saga/rootSaga.js",["109"],"import { takeEvery } from \"redux-saga/effects\";\n\n\nfunction* watchFetchData() {\n  \n}\n\nexport default watchFetchData;\n","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginWindow/index.jsx",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/index.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/captchaInput.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/pwdLoginForm.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/reducers/phoneInput.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/constant.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/index.jsx",["110","111"],"import React, { useRef, useState } from 'react';\nimport { Card, Button } from 'antd';\nimport PhoneLoginForm from './PhoneLoginForm'\nimport PwdLoginForm from './PwdLoginForm'\nimport { CaretRightOutlined} from '@ant-design/icons'\n\nimport './index.scss'\n\n\nconst LoginMain = (props) => {\n\n    const {isPhoneLogin, setIsPhoneLogin} = props;\n\n    const handleClick = () => {\n        if (!isPhoneLogin) {\n            \n        }\n    };\n\n    return (\n        <Card \n            className='login-window-main'\n            title={isPhoneLogin ? '欢迎使用力扣' : '账号密码登录'}\n            bordered={false}\n        >\n\n            <PhoneLoginForm style={{display: isPhoneLogin ? 'block' : 'none'}} />\n            <PwdLoginForm style={{display: isPhoneLogin ? 'none' : 'block'}} />\n            \n\n\n            <div className='link-button-warp'>\n                <Button className='link-button' type='link' onClick={() => setIsPhoneLogin(!isPhoneLogin)}>\n                    {isPhoneLogin ? '账号密码登录' : '验证码登录'}\n                </Button>\n\n\n                <Button className='link-button' type='link' onClick={handleClick}>\n                    {isPhoneLogin ? '邮箱注册' : '忘记密码'}\n                </Button>\n            </div>\n\n            <div className='us-username' style={{display: isPhoneLogin ? 'flex' : 'none'}}>\n                <span>已有美国站账号</span><CaretRightOutlined style={{fontSize: '12px', marginLeft: '2px'}}/>\n            </div>\n        </Card>\n    )\n}\n\nexport default LoginMain","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginFooter/index.jsx",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PhoneLoginForm/index.jsx",["112","113"],"import { Form, Button, message } from 'antd';\nimport React, { useEffect } from 'react';\nimport PhoneInput from './PhoneInput'\nimport CaptchaInput from './CaptchaInput'\n\nimport { InvalidPhoneNumber, EmptyPhoneNumber, EmptyCaptcha } from '../ErrorInfo'\nimport './index.scss'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { beEmptyCaptcha, breakCaptchaDefault } from '../../../store/actions/captchaInput'\nimport { beEmptyNumber, breakPhoneDefault } from '../../../store/actions/phoneInput'\n\n\n\n\n\n\nconst PhoneLoginForm = (props) => {\n    const [form] = Form.useForm();\n\n\n    const isPhoneKeepDefault = useSelector(state => state.phoneInput.isKeepDefault, shallowEqual);\n    const isCaptchaKeepDefault = useSelector(state => state.captchaInput.isKeepDefault, shallowEqual);\n    const isInValidPhoneNumber = useSelector(state => state.phoneInput.isInvalid, shallowEqual);\n    const isPhoneEmpty = useSelector(state => state.phoneInput.isEmpty, shallowEqual);\n    const isCaptchaEmpty = useSelector(state => state.captchaInput.isEmpty, shallowEqual);\n\n    // const isPhoneInputOnBlur = useSelector(state => state.phoneInput.isOnBlur, shallowEqual);\n\n\n    const dispacth = useDispatch()\n\n\n    /* \n\n        需求：\n            1. 用户在输入完手机号，并且失去该输入框焦点的时候，检测输入的手机号是否正确\n                * 正确的手机号需要将输入框的背景变淡蓝色，并且使获取验证码的按钮解除 disabled\n                * 输入错误的时候提示：error\n                    * 用户再次进行输入的时候取消 error 保持默认状态\n                \n            2. 用户在点击按钮的检测手机号输入框和验证码输入框是否为空\n                * 如果为空提示：error\n    \n    */\n\n\n    // 将表单填入的信息提交\n    const onFinish = (values) => {\n        const { captcha: { captchaValue }, phone: { phoneNumber } } = values;\n        if (captchaValue === '') {\n            dispacth(breakCaptchaDefault());\n            dispacth(beEmptyCaptcha());\n        }\n        if (phoneNumber === '') {\n            dispacth(breakPhoneDefault());\n            dispacth(beEmptyNumber());\n        }\n\n        // message.error('验证码错误，请重新验证');\n        console.log(values);\n    }\n\n\n    // useEffect(() => {\n\n    // }, []);\n\n\n    return (\n        <Form\n            className='phone-login-form'\n            name='phone_login_form'\n            onFinish={onFinish}\n            form={form}\n            initialValues={{\n                phone: {\n                    selectValue: '+86',\n                    phoneNumber: ''\n                },\n                captcha: {\n                    captchaValue: ''\n                }\n            }}\n            {...props}\n        >\n            <Form.Item\n                style={\n                    isPhoneKeepDefault ? { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ } :\n                        isPhoneEmpty ? { marginBottom: '40px' } :\n                            isInValidPhoneNumber ? { marginBottom: '40px' } :\n                                { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ }\n                }\n                className='phone-login-form-item phone-input-item'\n                name='phone'\n                help={\n                    isPhoneKeepDefault ? <></> :\n                        isPhoneEmpty ? <EmptyPhoneNumber /> :\n                            isInValidPhoneNumber ? <InvalidPhoneNumber /> :\n                                <></>\n                }\n            >\n                <PhoneInput />\n            </Form.Item>\n\n\n\n            <Form.Item\n                style={\n                    isCaptchaKeepDefault ? { marginBottom: '24px' } :\n                        isCaptchaEmpty ? { marginBottom: '40px' } : { marginBottom: '24px' }\n                }\n                className='phone-login-form-item captcha-input-item'\n                name=\"captcha\"\n                help={\n                    isCaptchaKeepDefault ? <></> :\n                        isCaptchaEmpty ? <EmptyCaptcha /> :\n                            <></>\n                }\n            >\n                <CaptchaInput />\n            </Form.Item>\n\n\n            <Form.Item\n                className='phone-login-form-item primary-button-item'\n            >\n                <Button \n                    className='primary-button' \n                    type='primary' \n                    htmlType='submit' \n                    style={{ width: '100%' }}\n                >\n                    登录 / 注册\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\n\n\nexport default PhoneLoginForm\n\n\n\n\n\n\n\n\n","/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PwdLoginForm/index.jsx",["114","115","116"],"import { Form, Button, Input } from 'antd';\nimport React, { useEffect } from 'react';\n\nimport { EmptyUsername, EmptyPassword } from '../ErrorInfo'\nimport './index.scss'\n\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n    beEmptyPwd,\n    beEmptyUername,\n    beInvalid,\n    notBeEmptyPwd,\n    notBeEmptyUsername,\n    notBeInvalid,\n    breakPwdDefault,\n    breakUsernameDefault,\n    keepPwdDefault,\n    keepUsernameDefault,\n    onPwdChange,\n    onUsernameChange\n} from '../../../store/actions/pwdLoginForm'\n\n\n\n\nconst PhoneLoginForm = (props) => {\n    const [form] = Form.useForm();\n\n\n    const isUsernameKeepDefault = useSelector(state => state.pwdLoginForm.isUsernameKeepDefault, shallowEqual);\n    const isPwdKeepDefault = useSelector(state => state.pwdLoginForm.isPwdKeepDefault, shallowEqual);\n    const isInValid = useSelector(state => state.pwdLoginForm.isInvalid, shallowEqual);\n    const isUsernameEmpty = useSelector(state => state.pwdLoginForm.isUsernameEmpty, shallowEqual);\n    const isPwdEmpty = useSelector(state => state.pwdLoginForm.isPwdEmpty, shallowEqual);\n    const username = useSelector(state => state.pwdLoginForm.username, shallowEqual);\n    const password = useSelector(state => state.pwdLoginForm.password, shallowEqual);\n\n    const dispacth = useDispatch()\n\n\n    // 将表单填入的信息提交\n    const onFinish = () => {\n        // const { username, password } = values;\n        if (username === '') {\n            dispacth(breakUsernameDefault());\n            dispacth(beEmptyUername());\n        }\n        if (password === '') {\n            dispacth(breakPwdDefault());\n            dispacth(beEmptyPwd());\n        }\n\n        console.log(username, password);\n    }\n\n    useEffect(() => {\n\n        return () => {\n        }\n    }, []);\n\n    const listenUsername = e => {\n        dispacth(keepUsernameDefault());\n\n        let username = e.target.value;\n\n        // 更新 username\n        dispacth(onUsernameChange(username));\n\n        // isEmpty\n        const isEmpty = username === '';\n        if (isEmpty) dispacth(beEmptyUername());\n        else dispacth(notBeEmptyUsername());\n    }\n    const listenPassword = e => {\n        dispacth(keepPwdDefault());\n\n        let password = e.target.value;\n\n        // 更新 password\n        dispacth(onPwdChange(password));\n\n        // isEmpty\n        const isEmpty = password === '';\n        if (isEmpty) dispacth(beEmptyPwd());\n        else dispacth(notBeEmptyPwd());\n    }\n   \n\n\n\n\n    return (\n        <Form\n            className='pwd-login-form'\n            name='pwd_login_form'\n            // onFinish={onFinish}\n            form={form}\n            initialValues={{\n                username: '',\n                password: ''\n            }}\n            {...props}\n        >\n            <Form.Item\n                className='pwd-login-form-item username-input-item'\n                name='username'\n                style={\n                    isUsernameKeepDefault ? { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ } :\n                        isUsernameEmpty ? { marginBottom: '40px' } :\n                            { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ }\n                }\n                help={\n                    isUsernameKeepDefault ? <></> :\n                        isUsernameEmpty ? <EmptyUsername /> :\n                            <></>\n                }\n            >\n                <Input className='username-input' placeholder='手机号 / 邮箱'onChange={listenUsername} />\n            </Form.Item>\n\n\n\n            <Form.Item\n                className='pwd-login-form-item password-input-item'\n                name=\"password\"\n                style={\n                    isPwdKeepDefault ? { marginBottom: '24px' } :\n                        isPwdEmpty ? { marginBottom: '40px' } : { marginBottom: '24px' }\n                }\n                help={\n                    isPwdKeepDefault ? <></> :\n                        isPwdEmpty ? <EmptyPassword /> :\n                            <></>\n                }\n            >\n                <Input.Password className='password-input' placeholder='输入密码' onChange={listenPassword} />\n            </Form.Item>\n\n\n            <Form.Item\n                className='pwd-login-form-item primary-button-item'\n            >\n                <Button \n                    // loading={true}\n                    className='primary-button' \n                    type='primary' \n                    onClick={onFinish} \n                    style={{ width: '100%' }}>登录</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\n\n\nexport default PhoneLoginForm","/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/actions/pwdLoginForm.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/actions/phoneInput.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/store/actions/captchaInput.js",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/ErrorInfo/index.jsx",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PhoneLoginForm/PhoneInput/index.jsx",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/login/components/LoginMain/PhoneLoginForm/CaptchaInput/index.jsx",["117"],"import { Input, Button } from 'antd';\nimport { useCallback, shallowEqual, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n    beEmptyCaptcha, \n    notBeEmptyCaptcha, \n    loading, \n    cancelLoading, \n    countDown, \n    countDownEnd,\n    onCaptchaChange,\n    keepCaptchaDefault\n} from '../../../../store/actions/captchaInput'\nimport './index.scss'\n\n\n\nconst CaptchaInput = ({ onChange, value = {} }) => {\n    const dispacth = useDispatch();\n\n\n    const captchaValue = useSelector(allStates => allStates.captchaInput.value, shallowEqual);\n    const isInvalid = useSelector(allStates => allStates.phoneInput.isInvalid, shallowEqual);\n    const isLoading = useSelector(allStates => allStates.captchaInput.isLoading, shallowEqual);\n    const isCountDown = useSelector(allStates => allStates.captchaInput.isCountDown, shallowEqual);\n    const [seconds, setSeconds] = useState(5);\n\n\n\n    // 让当前控件 onChange 的时候与 Form.Item 产生交互\n    const triggerChange = useCallback((changedValue) => {\n        if (onChange) {\n            onChange({\n                captchaValue,\n                ...value,\n                ...changedValue\n            });\n        }\n    }, [captchaValue, value, onChange]);\n\n    const defOnChange = useCallback((e) => {\n        const captchaValue = e.target.value;\n        dispacth(keepCaptchaDefault());\n        dispacth(onCaptchaChange(captchaValue));   \n        triggerChange({\n            captchaValue\n        });\n\n        const isEmpty = captchaValue === '';\n        if (isEmpty) dispacth(beEmptyCaptcha());\n        else dispacth(notBeEmptyCaptcha());\n    }, [dispacth, triggerChange]);\n\n\n    let timer;\n    const startCountDown = () => {\n        dispacth(countDown())\n        let minite = 5;\n        timer = setInterval(() => {\n\n            if (minite <= 1) {\n                dispacth(countDownEnd());\n                clearInterval(timer);\n            }\n            minite -= 1;\n            setSeconds(minite);\n        }, 1000);\n    }\n\n\n    const handleClick = () => {\n        dispacth(loading());\n        setSeconds(5);\n        setTimeout(() => {\n            dispacth(cancelLoading());\n            startCountDown();\n        }, 500);\n    }\n\n    \n\n    return (\n        <Input className='captcha-input'\n            placeholder='验证码'\n            onChange={defOnChange}\n            suffix={\n                <Button\n                    type='link'\n                    loading={isLoading}\n                    disabled={isInvalid || isLoading || isCountDown}\n                    onClick={handleClick}\n                >\n                    {\n                        isLoading ? '发送中' : \n                        isCountDown ? seconds + ' 秒后可重发' : '获取验证码'\n                    }\n                </Button>\n            }\n        />\n    )\n}\n\nexport default CaptchaInput","/Users/apple/daliy/React_Project/login_demo/src/pages/resetpassword/components/ResetPwdWindow/index.jsx",[],"/Users/apple/daliy/React_Project/login_demo/src/pages/resetpassword/components/ResetPwdMain/index.jsx",["118"],"import { Card, Radio } from 'antd'\nimport { useState } from 'react';\nimport PhoneResetForm from './PhoneResetForm'\n\nimport './index.scss'\nconst ResetPwdMain = (props) => {\n\n    const {isByPhoneNumber, setIsByPhoneNumber} = props;\n    console.log(isByPhoneNumber);\n\n    return (\n        <Card\n            className='resetpwd-window-main'\n            title='重新设置密码'\n            bordered={false}\n        >\n            <div className='resetpwd-window-main-hint-warp'>\n                <p className='resetpwd-window-main-hint'>\n                    {isByPhoneNumber ? '忘记密码了？请输入您的11位手机号，我们会发送短信验证码到您手机。' : \n                                       '忘记密码了？请输入您的电子邮箱，我们会发送重设邮件到您的邮箱。'}\n                </p>\n            </div>\n\n            <Radio.Group \n                value={isByPhoneNumber} \n                onChange={e => setIsByPhoneNumber(e.target.value)}\n            >\n                <Radio value={true}>用手机号重设</Radio>\n                <Radio value={false}>用邮箱重设</Radio>\n            </Radio.Group>\n\n            <PhoneResetForm />\n\n\n        </Card>\n    )\n}\n\nexport default ResetPwdMain","/Users/apple/daliy/React_Project/login_demo/src/pages/resetpassword/components/ResetPwdMain/PhoneResetForm/index.jsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":22},{"ruleId":"123","severity":1,"message":"127","line":9,"column":7,"nodeType":"125","messageId":"126","endLine":9,"endColumn":15},{"ruleId":"123","severity":1,"message":"128","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":19},{"ruleId":"123","severity":1,"message":"129","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":23},{"ruleId":"123","severity":1,"message":"130","line":1,"column":25,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"123","severity":1,"message":"131","line":1,"column":24,"nodeType":"125","messageId":"126","endLine":1,"endColumn":31},{"ruleId":"123","severity":1,"message":"132","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},{"ruleId":"123","severity":1,"message":"133","line":12,"column":5,"nodeType":"125","messageId":"126","endLine":12,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":15,"column":5,"nodeType":"125","messageId":"126","endLine":15,"endColumn":17},{"ruleId":"123","severity":1,"message":"135","line":33,"column":11,"nodeType":"125","messageId":"126","endLine":33,"endColumn":20},{"ruleId":"123","severity":1,"message":"132","line":2,"column":47,"nodeType":"125","messageId":"126","endLine":2,"endColumn":56},{"ruleId":"123","severity":1,"message":"130","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":18},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'ResetPwdWindow' is defined but never used.","Identifier","unusedVar","'waitTime' is assigned a value but never used.","'takeEvery' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'message' is defined but never used.","'useEffect' is defined but never used.","'beInvalid' is defined but never used.","'notBeInvalid' is defined but never used.","'isInValid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]